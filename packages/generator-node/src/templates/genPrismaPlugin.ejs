import {
  TypeBoxTypeProvider,
  TypeBoxValidatorCompiler,
} from "@fastify/type-provider-typebox";import { PrismaClient } from "@prisma/client";
// import { Type } from "@sinclair/typebox";
import { FastifyPluginAsync } from "fastify";
import fp from "fastify-plugin";

import routes from "./routes";

// import * as typeboxSchemas from "./typebox";
// 
// <% names.sort().forEach((name)=>{ %>export const <%= name %>ArraySchema = Type.Array(typeboxSchemas.<%= name %>);
// <% }) %>

// Use TypeScript module augmentation to declare the type of server.prisma to be PrismaClient
declare module "fastify" {
  interface FastifyInstance {
    prisma: PrismaClient;
  }
}

const prismaPlugin: FastifyPluginAsync = async (fastify) => {
  const prisma = new PrismaClient();

  await prisma.$connect();

  fastify.decorate("prisma", prisma);

  fastify.addHook("onClose", async (fastify) => {
    await fastify.prisma.$disconnect();
  });

  fastify.setValidatorCompiler(TypeBoxValidatorCompiler);
  fastify.withTypeProvider<TypeBoxTypeProvider>()
  fastify.register(routes);
};

export default fp(prismaPlugin);
